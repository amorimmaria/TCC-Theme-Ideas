{"version":3,"sources":["assets/images/sem-avatar.svg","assets/images/icons/back.svg","assets/images/icons/blue-heart.svg","assets/images/iconLogo2.svg","assets/images/icons/not-found.svg","assets/images/logo.svg","assets/images/landing.svg","assets/images/icons/lupa.svg","assets/images/icons/lampada.svg","assets/images/icons/signout.svg","assets/images/icons/cp.png","assets/images/icons/email.png","assets/images/icons/warning.svg","assets/images/icons/lixeira.png","assets/images/icons/editar.svg","assets/images/icons/success-check-icon.svg","axios-config.ts","hooks/auth.tsx","pages/Menu/index.tsx","components/PageHeader/index.tsx","components/InputInfo/index.tsx","components/UI/Input/index.tsx","components/UI/Spinner/index.tsx","components/FeedbackModal/index.tsx","pages/Profile/index.tsx","components/ThemeItem/index.tsx","components/UI/Select/index.tsx","pages/SearchTheme/index.tsx","pages/SuggestTheme/index.tsx","components/CadastradosItem/index.tsx","pages/ThemesCadastrado/index.tsx","pages/EditarThemes/index.tsx","routes/app.routes.tsx","pages/Register/Login/index.tsx","hooks/process-finished.tsx","pages/Register/Signup/index.tsx","pages/Register/ProcessFinished/index.tsx","pages/Register/ResetPasswordRequest/index.tsx","pages/Register/UpdateUserPassword/index.tsx","pages/Register/index.tsx","routes/auth.routes.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","user","setUser","token","setToken","loading","setLoading","userData","a","post","then","catch","res","response","data","error","email","resetData","put","useEffect","fetch_user","localStorage","getItem","fetch_token","sessionStorage","JSON","parse","Provider","value","signedIn","signIn","userAccount","signedUser","avatar","noAvatarImg","rememberUser","setItem","stringify","signUp","signOut","removeItem","requestPasswordResetEmail","updateUserPassword","useAuth","useContext","Menu","feedback","setFeedback","setError","authContext","history","useHistory","get","headers","authorization","totalConnections","total","replace","id","onClick","src","alt","name","signoutIcon","className","logo","menu","to","searchIcon","suggestIcon","blueHeartIcon","PageHeader","title","description","backIcon","logoImg","InputInfo","info","show","join","Input","inputType","inputContentType","inputLabel","inputId","fields","setFields","formValid","setFormValid","hasInfo","inputProps","showPassword","setShowPassword","onInputValueChange","e","inputIdentifier","target","newInputValue","allFields","Object","keys","isFormValid","isInputValid","validation","test","forEach","field","touched","valid","onInfoHover","showInfo","onInfoLeave","htmlFor","onChange","type","onMouseEnter","onMouseLeave","icon","infoIcon","style","cursor","color","hidePasswordIcon","showPasswordIcon","Spinner","FeedbackModal","status","message","onCloseModal","successIcon","failureIcon","initialFields","emailContato","Profile","modalType","setModalType","setAvatar","setName","setEmail","tipoDeUsuario","setTipoDeUsuario","pageReady","setPageReady","showModal","setShowModal","setStatus","userid","__id","profileData","String","curso","err","console","log","updatedModal","updateFailureModal","removedClassModal","removeThemeFailureModal","mainContent","onSubmit","preventDefault","parsedemailContato","fileInput","document","getElementById","click","onchange","file","files","match","alert","fr","FileReader","onloadend","result","fieldsNames","fieldName","updateFormStatus","readAsDataURL","cameraIcon","accept","display","disabled","placeholder","cp","ThemeItem","React","memo","props","ref","themeRef","themePhotoURL","themeName","themeTipoDeUsuario","themeCurso","themeSugestaoDeTema","themeDescricao","themeArea","themeLinksArtigos","rel","href","themeEmailContato","user_id","themeId","EmailIcon","Select","selectLabel","selected","items","onOptionSelect","themes","setThemes","label","currentSelected","setCurrentSelected","querySelectorAll","el","classList","remove","add","length","newThemes","includes","caretDownIcon","map","item","i","key","pop","push","setSelection","SearchTheme","setClassList","loadingMore","setLoadingMore","loadingFeedback","setLoadingFeedback","reFetch","setReFetch","totalThemes","setTotalThemes","pageNumber","setPageNumber","hasMore","setHasMore","observer","useRef","searchMoreNodeRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","setCurso","area","setArea","resultsInfo","results","next","params","page","currentClass","index","descricao","sugestaoDeTema","linksArtigos","notFoundIcon","SuggestTheme","hasClass","setHasClass","successModal","registerClass","warningIcon","CadastradosItem","removedThemeModal","navigateToThemeUpdate","EditarIcon","delete","courseTheme","LixeiraIcon","ThemesCadastrados","userId","EditarThemes","historyState","location","state","parsedDescricao","parsedSugestaoDeTema","parsedLinksArtigos","parsedEmailContato","AppRoutes","path","component","ThemesCadastrado","password","Login","setRememberUser","setInputThemes","maxLength","blueHeartImg","ProcessFinishedContext","ProcessFinishedContextProvider","setTitle","setDescription","defineTitle","newTitle","defineDescription","newDescription","useProcessFinished","surname","Signup","processFinishedContext","goBackImg","ProcessFinished","checkInBoxImg","ResetPasswordRequest","newPassword","repeatPassword","UpdateUserPassword","showNewPassword","setShowNewPassword","showRepeatPassword","setShowRepeatPassword","recoveryToken","pathname","split","RegExp","updatePasswordData","new_password","Register","registerMethod","setRegisterMethod","exact","AuthRoutes","Routes","routes","setRoutes","auth","App","app","ReactDOM","render"],"mappings":"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","file":"static/js/main.af543fd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sem-avatar.89215019.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.2e0948c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-heart.f74440a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconLogo2.23e2fd0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/not-found.60acd080.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c0e25275.svg\";","module.exports = __webpack_public_path__ + \"static/media/landing.c1bfb03f.svg\";","module.exports = __webpack_public_path__ + \"static/media/lupa.79014aca.svg\";","module.exports = __webpack_public_path__ + \"static/media/lampada.dc3f09cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/signout.46256597.svg\";","module.exports = __webpack_public_path__ + \"static/media/cp.5e5e6f45.png\";","module.exports = __webpack_public_path__ + \"static/media/email.daa55eea.png\";","module.exports = __webpack_public_path__ + \"static/media/warning.eda0e4d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/lixeira.152c66ec.png\";","module.exports = __webpack_public_path__ + \"static/media/editar.2927f8de.svg\";","module.exports = __webpack_public_path__ + \"static/media/success-check-icon.a249362d.svg\";","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'http://localhost:3333/'\n})\n","import React, { useContext, createContext, useState, useEffect } from 'react'\nimport axios from '../axios-config'\n\nimport noAvatarImg from '../assets/images/sem-avatar.svg'\n\ninterface User {\n  __id: string,\n  name: string,\n  email: string,\n  avatar: string,\n  emailContato: string | null,\n}\n\ninterface UserData {\n  name: string,\n  surname: string,\n  email: string,\n  password: string\n}\n\ninterface AuthContextType {\n  signedIn: boolean,\n  user: User | null,\n  token: string | null,\n  signIn(userAccount: { email: string, password: string, rememberUser: boolean }): Promise<any>,\n  signUp(userData: UserData): Promise<any>,\n  signOut(): void,\n  requestPasswordResetEmail(accountEmail: string): Promise<any>,\n  updateUserPassword(resetData: { new_password: string, token: string }): Promise<any>\n  loading: boolean\n}\n\nconst AuthContext = createContext({} as AuthContextType)\n\nexport const AuthProvider: React.FC = ({ children }) => {\n\n  const [user, setUser] = useState<User | null>(null)\n  const [token, setToken] = useState<string | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    let fetch_user = localStorage.getItem('@tcc:user:data')\n    let fetch_token = localStorage.getItem('@tcc:user:token')\n\n    if (!fetch_user || !fetch_token) {\n      fetch_user = sessionStorage.getItem(\"@tcc:user:data\")\n      fetch_token = sessionStorage.getItem(\"@tcc:user:token\")\n    }\n\n    if (fetch_user && fetch_token) {\n      setUser(JSON.parse(fetch_user))\n      setToken(fetch_token)\n    }\n  }, [])\n\n  function signIn(userAccount: { email: string, password: string, rememberUser: boolean }) {\n    setLoading(true)\n    return axios.post('/auth/signin', userAccount)\n      .then(response => {\n        setLoading(false)\n\n        const signedUser = {\n          ...response.data.user,\n          avatar: response.data.user.avatar\n            ? response.data.user.avatar\n            : noAvatarImg\n        }\n        setUser(signedUser)\n        setToken(response.data.token)\n        if (userAccount.rememberUser) {\n          localStorage.setItem('@tcc:user:data', JSON.stringify(signedUser))\n          localStorage.setItem('@tcc:user:token', response.data.token)\n        } else {\n          sessionStorage.setItem('@tcc:user:data', JSON.stringify(signedUser))\n          sessionStorage.setItem('@tcc:user:token', response.data.token)\n        }\n        return response\n      })\n      .catch(res => {\n        setLoading(false)\n        return { ...res }.response.data.error\n      })\n  }\n\n  async function signUp(userData: UserData) {\n    setLoading(true)\n    return axios.post('/auth/signup', userData)\n      .then(() => setLoading(false))\n      .catch(res => {\n        setLoading(false)\n        return { ...res }.response.data.error\n      })\n\n  }\n\n  function signOut() {\n    setUser(null)\n    setToken(null)\n    localStorage.removeItem('@tcc:user:data')\n    localStorage.removeItem('@tcc:user:token')\n    sessionStorage.removeItem('@tcc:user:data')\n    sessionStorage.removeItem('@tcc:user:token')\n  }\n\n  async function requestPasswordResetEmail(email: string) {\n    setLoading(true)\n    return axios.post('/auth/password/reset', { email })\n      .then(() => setLoading(false))\n      .catch(res => {\n        setLoading(false)\n        return { ...res }.response.data.error\n      })\n  }\n\n  async function updateUserPassword(resetData: { new_password: string, token: string }) {\n    setLoading(true)\n    return axios.put('/auth/password/reset/update', resetData)\n      .then(() => setLoading(false))\n      .catch(res => {\n        setLoading(false)\n        return { ...res }.response.data.error\n      })\n  }\n\n  return (\n    <AuthContext.Provider value={{\n      signedIn: !!user,\n      user,\n      token,\n      signIn,\n      signUp,\n      signOut,\n      requestPasswordResetEmail,\n      updateUserPassword,\n      loading\n    }}>{children}</AuthContext.Provider>\n  )\n}\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport axios from '../../axios-config'\n\n// hooks\nimport { useAuth } from '../../hooks/auth'\n\n// Images\nimport logo from '../../assets/images/logo.svg'\nimport menu from '../../assets/images/landing.svg'\nimport searchIcon from '../../assets/images/icons/lupa.svg'\nimport suggestIcon from '../../assets/images/icons/lampada.svg'\nimport blueHeartIcon from '../../assets/images/icons/blue-heart.svg'\nimport signoutIcon from '../../assets/images/icons/signout.svg'\n\n// CSS styles\nimport './styles.css'\n\nfunction Menu() {\n  const [feedback, setFeedback] = useState('Carregando conexões...')\n  const [error, setError] = useState(true)\n  const authContext = useAuth()\n  const history = useHistory()\n\n  useEffect(() => {\n    (function fetchConnections() {\n      axios.get('/connections', {\n        headers: { authorization: 'Bearer ' + authContext.token }\n      }).then(response => {\n        const totalConnections = response.data.total\n        setError(false)\n        setFeedback(`\n          Total de ${totalConnections}\n          ${totalConnections === 1 ? \"conexão\" : \"conexões\"} já\n          ${totalConnections === 1 ? \"realizada\" : \"realizadas\"}\n        `)\n      }).catch(() => {\n        setError(true)\n        setFeedback('Não foi possível recuperar o total de conexões :(')\n      })\n    })()\n  }, []) // eslint-disable-line\n\n  useEffect(() => {\n    if (!authContext.signedIn) history.replace(\"/auth/login\")\n  }, [authContext.signedIn]) // eslint-disable-line\n\n  return (\n    <div id=\"page-menu\">\n      <div id=\"page-menu-top\">\n        <div id=\"page-menu-header\">\n          <div id=\"user-avatar\" onClick={() => history.replace(\"/profile\")}>\n            <img src={authContext.user?.avatar} alt=\"User Avatar\" />\n            <p>{authContext.user?.name}</p>\n          </div>\n\n          <img id=\"user-signout\" onClick={authContext.signOut} src={signoutIcon} alt=\"Signout\" />\n        </div>\n\n        <div id=\"page-menu-logo\">\n          <div className=\"logo-container\">\n            <img src={logo} alt=\"TCC\" />\n            <h2>Sua plataforma de idéias para temas de TCC.</h2>\n          </div>\n\n          <img src={menu} alt=\"Plataforma de TCCs\" className=\"hero-image\" />\n        </div>\n      </div>\n\n      <div id=\"page-menu-bottom\">\n        <div id=\"welcome-text\">\n          <p>Seja bem-vindo.</p>\n          <p id=\"what-todo\">O que deseja fazer?</p>\n        </div>\n        <div id=\"buttons-container\">\n          <Link to=\"/search\" className=\"search\">\n            <img src={searchIcon} alt=\"Buscar tema\" />\n            Buscar Tema\n          </Link>\n\n          <Link to=\"/suggest\" className=\"suggest\">\n            <img src={suggestIcon} alt=\"Sugerir tema\" />\n            Sugerir Tema\n          </Link>\n        </div>\n\n        <span id=\"total-connections\">\n          {feedback}\n          {!error && <img src={blueHeartIcon} alt=\"Coração roxo\" />}\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// Images\nimport logoImg from '../../assets/images/iconLogo2.svg'\nimport backIcon from '../../assets/images/icons/back.svg'\n\n// CSS styles\nimport './styles.css'\n\ninterface PageHeaderProps {\n  title: string,\n  description?: string\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ title, description, children }) => {\n  return (\n    <header className=\"page-header\">\n      <div className=\"top-bar-container\">\n        <Link to=\"/menu\">\n          <img src={backIcon} alt=\"Voltar\" />\n        </Link>\n        <img src={logoImg} alt=\"Logo\" />\n      </div>\n\n      <div className=\"header-content\">\n        <strong>{title}</strong>\n        {description && <p>{description}</p>}\n        {children}\n      </div>\n    </header>\n  )\n}\n\nexport default PageHeader\n","import React from 'react'\n\n// CSS styles\nimport './styles.css'\n\ninterface InputInfoProps {\n  info: string,\n  show: \"initial\" | \"show\" | \"hide\"\n}\n\nconst InputInfo: React.FC<InputInfoProps> = ({ info, show }) => {\n  return (\n    <div className={[\"input-info\", show !== \"initial\" ? show : \"\"].join(' ')}>\n      <p className=\"input-info-text\">{ info }</p>\n    </div>\n  )\n}\n\nexport default InputInfo\n","import React, { InputHTMLAttributes, useState } from 'react'\n\n// Components\nimport InputInfo from '../../../components/InputInfo'\n\n// Icons\nimport { Icon } from '@iconify/react'\nimport showPasswordIcon from '@iconify/icons-mdi/eye'\nimport hidePasswordIcon from '@iconify/icons-mdi/eye-off'\nimport infoIcon from '@iconify/icons-mdi/information-outline'\n\n// CSS styles\nimport './styles.css'\n\n// Interfaces\nimport { FormFields } from '../../../interfaces/forms'\n\ntype InputTextarea = InputHTMLAttributes<HTMLInputElement> & InputHTMLAttributes<HTMLTextAreaElement>\n\ninterface InputProps extends InputTextarea {\n  inputType: \"input\" | \"textarea\",\n  inputContentType: string,\n  inputLabel: string,\n  inputId: string,\n  fields?: FormFields,\n  setFields?: (value: React.SetStateAction<FormFields>) => void,\n  formValid?: boolean,\n  setFormValid?: (value: React.SetStateAction<boolean>) => void,\n  hasInfo?: boolean,\n  feedback?: string,\n  setFeedback?: (value: React.SetStateAction<string>) => void,\n}\n\nconst Input: React.FC<InputProps> = ({\n  inputType,\n  inputContentType,\n  inputLabel,\n  inputId,\n  fields,\n  setFields,\n  formValid,\n  setFormValid,\n  hasInfo,\n  feedback,\n  setFeedback,\n  ...inputProps\n}) => {\n\n  const [showPassword, setShowPassword] = useState(false)\n\n  function onInputValueChange(e: React.ChangeEvent<any>) {\n    const inputIdentifier = e.target.id\n    let newInputValue: string = e.target.value\n\n    // if (inputIdentifier === \"emailContato\")\n    //   newInputValue = (newInputValue)\n\n    const allFields = Object.keys(fields!)\n\n    let isFormValid = true\n    const isInputValid = fields![inputIdentifier].validation.test(newInputValue)\n\n    if (isInputValid) {\n      allFields.forEach(field => {\n        if (isFormValid)\n          if (field !== inputIdentifier)\n            isFormValid = fields![field].validation.test(fields![field].value)\n      })\n    } else isFormValid = false\n\n    if (isFormValid !== formValid)\n      setFormValid!(isFormValid)\n\n    if (feedback) setFeedback!('')\n\n    setFields!({\n      ...fields,\n      [inputIdentifier]: {\n        ...fields![inputIdentifier],\n        value: newInputValue,\n        touched: true,\n        valid: isInputValid\n      }\n    })\n  }\n\n  function onInfoHover() {\n    setFields!({\n      ...fields,\n      [inputId]: {\n        ...fields![inputId],\n        showInfo: \"show\"\n      }\n    })\n  }\n\n  function onInfoLeave() {\n    setFields!({\n      ...fields,\n      [inputId]: {\n        ...fields![inputId],\n        showInfo: \"hide\"\n      }\n    })\n  }\n\n  function setInputThemes() {\n    return [\n      \"input-group\",\n      fields ?\n        !fields[inputId].valid && fields[inputId].touched ? 'invalid' : ''\n        : ''\n    ].join(' ')\n  }\n\n  return (\n    <div id=\"input-wrapper\">\n        <label htmlFor={inputId}>{inputLabel}</label>\n        <div className={setInputThemes()}>\n          {\n            inputType === \"input\"\n              ? (\n                <input\n                  value={fields ? fields[inputId].value : inputProps.value}\n                  onChange={onInputValueChange}\n                  id={inputId}\n                  type={inputContentType}\n                  {...inputProps}\n                  />\n              ) : (\n                <textarea\n                  onChange={onInputValueChange}\n                  {...inputProps}\n                  id={inputId}\n                />\n              )\n          }\n          {\n            inputContentType !== \"password\"\n              ? hasInfo && (\n                <div\n                  onMouseEnter={onInfoHover}\n                  onMouseLeave={onInfoLeave}\n                ><Icon icon={infoIcon} /></div>\n              ) : (\n                <div className=\"icon-group\">\n                  <div\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    <Icon\n                      color={showPassword ? '#33AAC2' : '#8ad2e0'}\n                      icon={showPassword ? hidePasswordIcon : showPasswordIcon}\n                    />\n                  </div>\n                  <div\n                    onMouseEnter={onInfoHover}\n                    onMouseLeave={onInfoLeave}\n                  ><Icon icon={infoIcon} /></div>\n                </div>\n              )\n          }\n          {\n            hasInfo &&\n            <InputInfo\n              show={fields![inputId].showInfo}\n              info={fields![inputId].info}\n            />\n          }\n        </div>\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\n\n// CSS styles\nimport './styles.css'\n\nfunction Spinner() {\n  return <div className=\"spinner\"></div>\n}\n\nexport default Spinner\n","import React from 'react'\n\n// Icons\nimport { Icon } from '@iconify/react'\nimport successIcon from '@iconify/icons-mdi/checkbox-marked-circle-outline'\nimport failureIcon from '@iconify/icons-mdi/close-circle-outline'\n\n// CSS styles\nimport './styles.css'\n\n// Interfaces\ninterface FeedbackModalProps {\n  status: \"success\" | \"error\",\n  message: string,\n  onCloseModal: (...params: any[]) => void\n}\n\nconst FeedbackModal: React.FC<FeedbackModalProps> = ({ status, message, onCloseModal }) => {\n  return (\n    <div className=\"modal-wrapper\">\n      <div onClick={onCloseModal} className=\"modal-backdrop\"></div>\n      <div className=\"feedback-modal\">\n        <div className={status}>\n          <Icon icon={status === \"success\" ? successIcon : failureIcon} />\n        </div>\n        <p>{message}</p>\n        <button onClick={onCloseModal}>Ok</button>\n      </div>\n    </div>\n  )\n}\n\nexport default FeedbackModal\n","import React, { useState, useEffect } from 'react'\nimport axios from '../../axios-config'\nimport { Link } from 'react-router-dom'\n\n// Icons\nimport { Icon } from '@iconify/react'\nimport cameraIcon from '@iconify/icons-mdi/camera'\n\n// Images\nimport noAvatarImg from '../../assets/images/sem-avatar.svg'\nimport cp from '../../assets/images/icons/cp.png'\n\n// Components\nimport PageHeader from '../../components/PageHeader'\nimport Input from '../../components/UI/Input'\nimport Spinner from '../../components/UI/Spinner'\nimport FeedbackModal from '../../components/FeedbackModal'\n\n// hooks\nimport { useAuth } from '../../hooks/auth'\n\n// Interfaces\nimport { FormFields } from '../../interfaces/forms'\n\n// CSS styles\nimport './styles.css'\n\n\nconst initialFields: FormFields = {\n\n  emailContato: {\n    value: '',\n    validation:  /^[a-z-_\\d.]{3,}@[a-z]{3,}(\\.com|\\.br|\\.com\\.br)$/,\n    valid: false,\n    info: 'O E-mail tem que ser no formato: exemplo@dominio.com',\n    showInfo: \"initial\",\n    touched: false\n  }\n}\n\nfunction Profile() {\n\n    const authContext = useAuth()\n    const [modalType, setModalType] = useState(\"update-profile\")\n    const [fields, setFields] = useState(initialFields)\n    const [formValid, setFormValid] = useState(false)\n    const [avatar, setAvatar] = useState<string>('')\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    // const [emailContato, setEmailContato] = useState(\"\")\n    const [tipoDeUsuario, setTipoDeUsuario] = useState('')\n    // const [curso, setCurso]= useState('');\n\n    const [loading, setLoading] = useState(false)\n    const [pageReady, setPageReady] = useState(false)\n    const [showModal, setShowModal] = useState(true)\n    const [status, setStatus] = useState(\"none\")\n\n    useEffect(() => {\n        (function fetchProfileData() {\n            setLoading(true)\n            axios.get(\"/get-profile\", {\n                headers: {\n                    authorization: \"Bearer \" + authContext.token,\n                    userid: authContext.user?.__id\n                }\n            })\n                .then(response => {\n                    setLoading(false)\n                    const profileData = response.data\n                    // let emailContato = ''\n\n                    // if (profileData.emailContato)\n                    //     emailContato = (profileData.emailContato)\n\n                    setFields({\n\n                        ...fields,\n                        emailContato: {\n                            ...fields.emailContato,\n                            value: profileData.emailContato ? String(profileData.emailContato) : '',\n                            validation: !profileData.curso\n                                ? /^[a-z-_\\d.]{3,}@[a-z]{3,}(\\.com|\\.br|\\.com\\.br)$/\n                                : fields.emailContato.validation\n\n                        }\n                    })\n\n                    if (profileData.avatar) setAvatar(profileData.avatar)\n                    else setAvatar(noAvatarImg)\n\n                    setName(profileData.name)\n                    setEmail(profileData.email)\n\n                    // if(profileData.emailContato)\n                    //   setEmailContato(profileData.emailContato)\n\n                    setPageReady(true)\n\n                })\n                .catch(err => {\n                    setLoading(false)\n                    console.log(err)\n                })\n        })()\n    }, []) // eslint-disable-line\n\n\n    function updateFormStatus() {\n        if (pageReady) {\n            const fieldsNames = Object.keys(fields)\n            let isFormValid = true\n            fieldsNames.forEach(fieldName => {\n                if (isFormValid)\n                    isFormValid = fields[fieldName].validation.test(fields[fieldName].value)\n            })\n            setFormValid(isFormValid)\n        }\n    }\n\n    function uploadAvatar() {\n        const fileInput = document.getElementById('upload-avatar')! as HTMLInputElement\n        fileInput.click()\n        fileInput.onchange = () => {\n            const file = fileInput.files![0]\n            if (!file.type.match(/^image\\/(png|jpeg|jpg)$/))\n                return alert(\"Apenas arquivos de imagens são aceitos!\")\n\n            const fr = new FileReader()\n            fr.onloadend = (e) => {\n                setAvatar(e.target?.result as string)\n                updateFormStatus()\n            }\n            fr.readAsDataURL(file)\n        }\n    }\n\n    function updateProfile(e: React.FormEvent<HTMLFormElement>) {\n      e.preventDefault()\n      setModalType(\"update-profile\")\n\n      const parsedemailContato = fields.emailContato.value\n\n      const userData = {\n        avatar,\n        emailContato: parsedemailContato,\n        tipoDeUsuario,\n      }\n\n      axios.put(\"/update-profile\", userData, {\n        headers: {\n          authorization: \"Bearer \" + authContext.token,\n          userid: authContext.user?.__id\n        }\n      })\n        .then(() => {\n          setStatus(\"success\")\n          setShowModal(true)\n          authContext.user = {\n            ...authContext.user!,\n            avatar,\n            emailContato: fields.emailContato.value,\n          }\n        })\n        .catch(() => {\n          setStatus(\"error\")\n          setShowModal(true)\n        })\n  }\n\n  const updatedModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"O perfil foi atualizado com sucesso!\"\n      onCloseModal={() => setShowModal(false)}\n    />\n  )\n\n  const updateFailureModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"Ocorreu um erro ao atualizar o perfil.\n      Tente novamente mais tarde.\"\n      onCloseModal={() => setShowModal(false)}\n    />\n  )\n\n  const removedClassModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"Tema removido com sucesso!\"\n      onCloseModal={() => {\n        setShowModal(false)\n        // setCurso(\"\")\n      }}\n    />\n  )\n\n  const removeThemeFailureModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"Ocorreu um erro ao remover o tema. Tente novamente mais tarde.\"\n      onCloseModal={() => setShowModal(false)}\n    />\n  )\n\n  const mainContent = (\n    <div id=\"theme-profile\">\n      <PageHeader title=\"Meu perfil\" />\n\n      <main>\n        <form onSubmit={updateProfile}>\n          <div id=\"profile-avatar\">\n            <div id=\"profile-avatar-image\">\n              <img src={avatar} alt=\"Profile\" />\n              <div onClick={uploadAvatar}>\n                <Icon icon={cameraIcon} />\n              </div>\n              <input\n                id=\"upload-avatar\"\n                type=\"file\"\n                accept=\"image/png, image/jpeg, image/svg\"\n                style={{ display: 'none' }}\n              />\n            </div>\n            <div id=\"profile-avatar-description\">\n              <p>{name}</p>\n              <p>{tipoDeUsuario ? setTipoDeUsuario : \"Discente\"}</p>\n            </div>\n          </div>\n          <fieldset>\n            <legend>Seus dados</legend>\n            <Input\n              value={name}\n              inputId=\"name\"\n              inputLabel=\"Nome\"\n              inputType=\"input\"\n              inputContentType=\"text\"\n              disabled\n            />\n            <Input\n              value={email}\n              inputId=\"email\"\n              inputLabel=\"Email\"\n              inputType=\"input\"\n              inputContentType=\"email\"\n              disabled\n            />\n\n            <Input\n              value={fields.emailContato.value}\n              inputId=\"emailContato\"\n              inputLabel=\"E-mail para contato\"\n              placeholder= \"E-mail\"\n              inputType=\"input\"\n              inputContentType=\"text\"\n              fields={fields}\n              setFields={setFields}\n              formValid={formValid}\n              setFormValid={setFormValid}\n              hasInfo\n            />\n\n\n          </fieldset>\n            {\n              <div id=\"buttons-container\">\n              <Link to=\"/cadastrado\" className=\"cadastrado\">\n                  <img src={cp} alt=\"Temas cadastrado\" />\n                  Meus temas cadastrados\n              </Link>\n          </div>\n            }\n\n            <footer>\n              <button type=\"submit\" disabled={!formValid || loading}>\n                {\n                  loading\n                    ? <div className=\"spinner-resizer\"><Spinner /></div>\n                    : \"Salvar modificações\"\n                }\n              </button>\n            </footer>\n        </form>\n      </main>\n    </div>\n  )\n\n  return (\n    <>\n      {\n        modalType === \"update-profile\"\n        ? (\n            showModal && (\n              status === \"success\"\n                ? updatedModal :\n                status === \"error\"\n                && updateFailureModal\n            )\n        )\n        : (\n            modalType === \"remove-theme\"\n            && (\n                showModal && (\n                  status === \"success\"\n                    ? removedClassModal :\n                    status === \"error\"\n                    && removeThemeFailureModal\n                )\n            )\n        )\n      }\n      { mainContent }\n    </>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport axios from '../../axios-config'\n\n// Images\nimport EmailIcon from '../../assets/images/icons/email.png'\nimport noAvatarImg from '../../assets/images/sem-avatar.svg'\n\n// CSS styles\nimport './styles.css'\n\ninterface ThemeItemProps {\n  themeId: number,\n  themePhotoURL: string,\n  themeName: string,\n  themeCurso: string,\n  themeArea: string,\n  themeEmailContato: string,\n  themeTipoDeUsuario: string,\n  themeSugestaoDeTema: string,\n  themeDescricao: string,\n  themeLinksArtigos: string,\n  themeRef?: any\n}\n\nconst ThemeItem: React.FC<ThemeItemProps> = React.memo(props => {\n\n  function createConnection() {\n    axios.post('/connections', { user_id: props.themeId })\n  }\n\n  return (\n    <article className=\"theme-item\" ref={props.themeRef}>\n      <header>\n        <img src={\n          props.themePhotoURL\n            ? props.themePhotoURL\n            : noAvatarImg\n        } alt={props.themeName} />\n        <div>\n          <strong>{props.themeName}</strong>\n          <span>{props.themeTipoDeUsuario}</span>\n        </div>\n        <span>\n          <p><strong>Curso: </strong>{props.themeCurso}</p>\n          <p><strong>Sugestão de Tema: </strong>{props.themeSugestaoDeTema}</p>\n          <p><strong>Descrição: </strong>{props.themeDescricao}</p>\n          <p><strong>Área: </strong>{props.themeArea}</p>\n          <p><strong>Links de Artigos: </strong>{props.themeLinksArtigos}</p>\n        </span>\n      </header>\n      <footer>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`mailto:${props.themeEmailContato}?subject=Interesse no tema sugerido no TCC Theme Ideas`}\n          onClick={createConnection}\n        >\n          <img src={EmailIcon} alt=\"Ícone do email\" />\n          Entrar em contato\n\n        </a>\n      </footer>\n    </article>\n  )\n})\n\nexport default ThemeItem\n","import React, { useState, useEffect } from 'react'\n\n// Icons\nimport { Icon } from '@iconify/react'\nimport caretDownIcon from '@iconify/icons-mdi/caret-down'\n\n// CSS styles\nimport './styles.css'\n\ninterface SelectItem {\n    value: string,\n    label: string\n}\n\ninterface SelectProps {\n  selectLabel: string,\n  selected: SelectItem,\n  items: SelectItem[],\n  onOptionSelect: (opt: SelectItem) => void\n}\n\nconst Select: React.FC<SelectProps> = ({ selectLabel, selected, items, onOptionSelect }) => {\n  const [themes, setThemes] = useState([\"Select\", \"Close\"])\n  const [currentSelected, setCurrentSelected] = useState({ value: selected.value, label: selected.label })\n\n  function toggleSelect() {\n    document.querySelectorAll('div.Select.Open')\n      .forEach(el => {\n        el.classList.remove('Open')\n        el.classList.add('Close')\n      })\n    if (items.length !== 0) {\n      let newThemes = []\n      if (themes.includes(\"Open\"))\n        newThemes = [\"Select\", \"Close\"]\n      else {\n        newThemes = [\"Select\", \"Open\"]\n      }\n      setThemes(newThemes)\n    }\n  }\n\n  function setSelection(item: SelectItem) {\n    const newThemes = [...themes]\n    newThemes.pop()\n    newThemes.push(\"Close\")\n    setThemes(newThemes)\n    setCurrentSelected(item)\n  }\n\n  useEffect(() => {\n    onOptionSelect(currentSelected)\n  }, [currentSelected]) //eslint-disable-line\n\n  return (\n    <div className={themes.join(' ')}>\n        <label>{selectLabel}</label>\n        <div onClick={toggleSelect} className=\"SelectContent\">\n            <div className=\"SelectSelector\">\n              <span>{currentSelected.label}</span>\n              {items.length !== 0 && <Icon icon={caretDownIcon} />}\n            </div>\n            <ul>{\n              items.map((item, i) => (\n                <li\n                  className={item.value === currentSelected.value ? 'Selected' : ''}\n                  key={i}\n                  onClick={() => setSelection(item)}\n                >{item.label}</li>\n              ))\n            }</ul>\n        </div>\n    </div>\n  )\n}\n\nexport default Select\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport axios from '../../axios-config'\nimport { useHistory } from 'react-router-dom'\n\n// Components\nimport PageHeader from '../../components/PageHeader'\nimport ThemeItem from '../../components/ThemeItem'\nimport Select from '../../components/UI/Select'\nimport Spinner from '../../components/UI/Spinner'\n\n// hooks\nimport { useAuth } from '../../hooks/auth'\n\n// Images\nimport notFoundIcon from '../../assets/images/icons/not-found.svg'\n\n// Icons\nimport { Icon } from '@iconify/react'\nimport searchIcon from '@iconify/icons-mdi/magnify'\n\n// CSS styles\nimport './styles.css'\n\ninterface ClassItem {\n  id: number,\n  name: 'string',\n  avatar: string,\n  emailContato: string,\n  sugestaoDeTema: string,\n  tipoDeUsuario: string,\n  curso: string,\n  descricao: string,\n  area: string,\n  linksArtigos: string\n}\n\nfunction SearchTheme() {\n\n  const [classList, setClassList] = useState<ClassItem[]>([])\n  const [loading, setLoading] = useState(false)\n  const [loadingMore, setLoadingMore] = useState(false)\n  const [loadingFeedback, setLoadingFeedback] = useState('')\n  const [reFetch, setReFetch] = useState(true)\n  const [totalThemes, setTotalThemes] = useState(0)\n\n\n  const [pageNumber, setPageNumber] = useState(1)\n  const [hasMore, setHasMore] = useState(true)\n  const observer: any = useRef()\n  const searchMoreNodeRef = useCallback(node => {\n    if (loadingMore) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(pageNumber + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loadingMore, hasMore, classList.length]) //eslint-disable-line\n\n  const [curso, setCurso] = useState<string | null>(null)\n  const [tipoDeUsuario, setTipoDeUsuario] = useState<string | null>(null)\n  const [area, setArea] = useState<string | null>(null)\n\n  const history = useHistory()\n  const authContext = useAuth()\n\n  useEffect(() => {\n      (function fetchThemes() {\n        if (reFetch && hasMore) {\n          setReFetch(false)\n          setLoading(true)\n          axios.get('/themes', {\n            headers: {\n              authorization: 'Bearer ' + authContext.token\n            }\n          })\n          .then(response => {\n            setLoading(false)\n            setClassList(response.data.resultsInfo.results)\n            setHasMore(!!response.data.resultsInfo.next)\n            setTotalThemes(response.data.resultsInfo.total)\n\n          })\n          .catch(() => {\n            setLoading(false)\n            alert('Ocorreu um erro desconhecido ao carregar os temas.')\n            history.replace('/')\n          })\n        }\n    })()\n  }, [reFetch]) // eslint-disable-line\n\n  useEffect(() => {\n    setLoadingMore(true)\n    axios.get('/themes', {\n      params: {\n        curso,\n        tipoDeUsuario,\n        area,\n        page: pageNumber\n      },\n      headers: {\n        authorization: 'Bearer ' + authContext.token,\n        userid: authContext.user?.__id\n      }\n    })\n      .then(response => {\n        setLoadingMore(false)\n        setClassList([...classList, ...response.data.resultsInfo.results])\n        setHasMore(!!response.data.resultsInfo.next)\n        if(!!!response.data.resultsInfo.next)\n          setLoadingFeedback('Estes são todos os resultados')\n      })\n      .catch(() => {\n        setLoadingMore(false)\n        setLoadingFeedback('Erro ao buscar mais temas. Tente novamente mais tarde.')\n      })\n  }, [pageNumber]) // eslint-disable-line\n\n  function filterThemes(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    setLoading(true)\n    setPageNumber(1)\n    setClassList([])\n    axios.get('/themes', {\n      params: {\n        curso,\n        tipoDeUsuario,\n        area\n      },\n      headers: {\n        authorization: 'Bearer ' + authContext.token,\n        userid: authContext.user?.__id\n      }\n    })\n      .then(response => {\n        setLoading(false)\n        setClassList([...response.data.resultsInfo.results])\n        setHasMore(!!response.data.resultsInfo.next)\n      })\n      .catch(() => {\n        setLoading(false)\n        alert('Erro ao aplicar filtros. Mostrando todos os resultados.')\n        setCurso(null)\n        setTipoDeUsuario(null)\n        setArea(null)\n        setReFetch(true)\n      })\n  }\n\n  return (\n    <div id=\"page-theme-list\" className=\"container\">\n      <PageHeader\n        title=\"Estes são os temas disponíveis.\"\n        description={`Temos um total de ${totalThemes} Tema(s)!`}\n      >\n        <form id=\"search-themes\" onSubmit={filterThemes}>\n          <Select\n            selectLabel=\"Curso\"\n            selected={{ value: \"\", label: \"Todos os cursos\" }}\n            items={[\n              {value: \"\", label: \"Todos os cursos\" },\n              {value: 'Ciência da Computação', label: 'Ciência da Computação'},\n              {value: 'Ciências e Tecnologias', label: 'Ciências e Tecnologias'},\n              {value: 'Design', label: 'Design'},\n              {value: 'Engenharia de Computação', label: 'Engenharia de Computação'},\n              {value: 'Engenharia de Software', label: 'Engenharia de Software'},\n              {value: 'Matemática', label: 'Matemática'},\n              {value: 'Sistemas de Informação', label: 'Sistemas de Informação'},\n            ]}\n            onOptionSelect={selected => setCurso(selected.value)}\n          />\n          <Select\n            selectLabel=\"Tipo de usuário\"\n            selected={{ value: \"\", label: \"Todos os usuários\" }}\n            items={[\n              {value: \"\", label: \"Todos os usuários\"},\n              {value: 'Docente', label: 'Docente'},\n              {value: 'Discente', label: 'Discente'}\n            ]}\n            onOptionSelect={selected => setTipoDeUsuario(selected.value)}\n          />\n          <Select\n            selectLabel=\"Área\"\n            selected={{ value: \"\", label: \"Todas as áreas\" }}\n            items={[\n              {value: \"\", label: \"Todas as áreas\"},\n              {value: 'IoT', label: 'IoT'},\n              {value: 'Segurança', label: 'Segurança'},\n              {value: 'Banco de Dados', label: 'Banco de Dados'},\n              {value: 'Desenvolvimento', label: 'Desenvolvimento'},\n              {value: 'Engenharia de Software', label: 'Engenharia de Software'},\n              {value: 'Inteligencia Artificial', label: 'Inteligencia Artificial'},\n              {value: 'Ciencia de Dados', label: 'Ciencia de Dados'},\n              ]}\n            onOptionSelect={selected => setArea(selected.value)}\n          />\n          <button type=\"submit\">\n            <Icon icon={searchIcon} />\n            Buscar\n          </button>\n        </form>\n      </PageHeader>\n\n    <main>\n      {\n        loading\n          ? <div className=\"spinner-resizer\"><Spinner /></div>\n          : classList.length > 0\n            ? (\n              <>\n                {classList.map((currentClass, index) => {\n                  if (index === classList.length - 4)\n                    return (\n                      <ThemeItem\n                        key={index}\n                        themeRef={searchMoreNodeRef}\n                        themeId={currentClass.id}\n                        themePhotoURL={currentClass.avatar}\n                        themeName={currentClass.name}\n                        themeCurso={currentClass.curso}\n                        themeDescricao={currentClass.descricao}\n                        themeArea={currentClass.area}\n                        themeSugestaoDeTema={currentClass.sugestaoDeTema}\n                        themeTipoDeUsuario={currentClass.tipoDeUsuario}\n                        themeLinksArtigos={currentClass.linksArtigos}\n                        themeEmailContato={currentClass.emailContato}\n                      />\n                    )\n                  return (\n                    <ThemeItem\n                      key={index}\n                      themeId={currentClass.id}\n                      themePhotoURL={currentClass.avatar}\n                      themeName={currentClass.name}\n                      themeCurso={currentClass.curso}\n                      themeDescricao={currentClass.descricao}\n                      themeArea={currentClass.area}\n                      themeSugestaoDeTema={currentClass.sugestaoDeTema}\n                      themeTipoDeUsuario={currentClass.tipoDeUsuario}\n                      themeLinksArtigos={currentClass.linksArtigos}\n                      themeEmailContato={currentClass.emailContato}\n                    />\n                  )\n                })}\n                {\n                  hasMore\n                    ? loadingMore && <div className=\"spinner-resizer\"><Spinner /></div>\n                    : <p id=\"all-results\">{loadingFeedback}</p>\n                }\n              </>\n            )\n            : (\n                <section className=\"no-themes-found\">\n                  <header>\n                    Oops! Parece que não foi encontrado nenhum tema <br />\n                    disponível. Tente alterar os filtros.\n                  </header>\n\n                  <img src={notFoundIcon} alt=\"Nenhum tema foi encontrado\" />\n                </section>\n            )\n      }\n      </main>\n    </div>\n  )\n}\n\nexport default SearchTheme\n","import React, { useState, useEffect } from 'react'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport axios from '../../axios-config'\n\n\n// Components\nimport PageHeader from '../../components/PageHeader'\nimport Input from '../../components/UI/Input'\nimport Select from '../../components/UI/Select'\nimport Spinner from '../../components/UI/Spinner'\n\n// Images\nimport warningIcon from '../../assets/images/icons/warning.svg'\n\n// hooks\nimport { useAuth } from '../../hooks/auth'\n\n// CSS styles\nimport './styles.css'\n\n// Interfaces\nimport { FormFields, ProfileData } from '../../interfaces/forms'\nimport FeedbackModal from '../../components/FeedbackModal'\n\nconst initialFields: FormFields = {\n\n  emailContato: {\n    value: '',\n    validation:  /^[a-z-_\\d.]{3,}@[a-z]{3,}(\\.com|\\.br|\\.com\\.br)$/,\n    valid: false,\n    info: 'O E-mail tem que ter o formato: exemplo@dominio.com',\n    showInfo: \"initial\",\n    touched: false\n  },\n\n  descricao: {\n    value: '',\n    validation: /^[\\d\\w\\sà-ú,.!-]{30,1000}$/,\n    valid: false,\n    info: 'A descricao precisa conter de 50 a 300 caracteres.',\n    showInfo: \"initial\",\n    touched: false\n  },\n\n  sugestaoDeTema: {\n    value: '',\n    validation:  /^[\\d\\w\\sà-ú,.!-]{10,300}$/,\n    valid: false,\n    info: 'O tema tem quer ter mais de 10 caracteres',\n    showInfo: \"initial\",\n    touched: false\n  },\n\n  linksArtigos: {\n    value: '',\n    validation:  /^[\\d\\w\\sà-ú0-9,/:.!-]{10,1000}$/,\n    valid: false,\n    info: 'O link tem que ser válido',\n    showInfo: \"initial\",\n    touched: false\n  }\n}\n\nfunction SuggestTheme() {\n\n  const [fields, setFields] = useState<FormFields>(initialFields)\n  const [formValid, setFormValid] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const [tipoDeUsuario, setTipoDeUsuario] = useState<string>('')\n  const [curso, setCurso]= useState('');\n  const [area, setArea]= useState('');\n\n  const [hasClass, setHasClass] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n\n  const history = useHistory()\n  const authContext = useAuth()\n\n  useEffect(() => {\n    axios.get(\"/get-profile\", {\n      headers: {\n        authorization: \"Bearer \" + authContext.token,\n        userid: authContext.user?.__id\n      }\n    })\n    .then(response => {\n    const userData: ProfileData = response.data\n      if (userData.curso) {\n        setHasClass(false)\n        setShowModal(false)\n        return\n      }\n\n      setFields({\n        ...fields,\n        emailContato: {\n          ...fields.emailContato,\n          value: userData.emailContato\n        },\n        sugestaoDeTema: {\n          ...fields.sugestaoDeTema,\n          value: userData.sugestaoDeTema\n        },\n        descricao: {\n          ...fields.descricao,\n          value: userData.descricao\n        },\n        linksArtigos: {\n          ...fields.linksArtigos,\n          value: userData.linksArtigos\n        }\n      })\n\n    }).catch(err => console.log(err))\n  }, []) // eslint-disable-line\n\n  function registerClass(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    setLoading(true)\n    axios.post('/themes', {\n      emailContato: fields.emailContato.value,\n      descricao: fields.descricao.value,\n      sugestaoDeTema: fields.sugestaoDeTema.value,\n      linksArtigos: fields.linksArtigos.value,\n      curso,\n      area,\n      tipoDeUsuario,\n    }, {\n      headers: {\n        showModal,\n        authorization: \"Bearer \" + authContext.token,\n        userid: authContext.user?.__id\n      }\n    })\n    .then(() => {\n      setLoading(false)\n      setShowModal(true)\n    })\n    .catch(() => {\n      setLoading(false)\n      alert('Erro ao realizar cadastro. Por favor tente novamente mais tarde.')\n    })\n  }\n\n  // const errorModal = (\n  //   <FeedbackModal\n  //     status=\"error\"\n  //     message=\"Você já cadastrou um tema!\"\n  //     onCloseModal={() => history.replace(\"/menu\")}\n  //   />\n  // )\n\n  const successModal = (\n    <FeedbackModal\n      status=\"success\"\n      message=\"Tema cadastrado com sucesso!\n      Você pode editar informações sobre o tema no seu perfil.\"\n      onCloseModal={() => history.replace(\"/menu\")}\n    />\n  )\n\n  const mainContent = (\n    <div id=\"page-theme-form\" className=\"container\">\n      <PageHeader\n        title=\"Que incrível que você quer sugerir um tema.\"\n      />\n\n      <main>\n        <form onSubmit={e => registerClass(e)}>\n          <fieldset>\n            <legend>Seus dados</legend>\n              <Input\n                value={fields.emailContato.value}\n                inputId=\"emailContato\"\n                inputLabel=\"E-mail para contato\"\n                placeholder= \"E-mail\"\n                inputType=\"input\"\n                inputContentType=\"text\"\n                fields={fields}\n                setFields={setFields}\n                formValid={formValid}\n                setFormValid={setFormValid}\n                hasInfo\n              />\n\n              <Select\n                selectLabel=\"Docente ou discente?\"\n                selected={{ value: \"Escolha uma opção\", label: \"Escolha uma opção\" }}\n                items={[\n                  {value: 'Docente', label: 'Docente'},\n                  {value: 'Discente', label: 'Discente'}\n                ]}\n                onOptionSelect={selected => setTipoDeUsuario(selected.value)}\n              />\n          </fieldset>\n\n          <fieldset>\n            <legend>Sobre sugestão do tema</legend>\n              <div id=\"suggest-theme\">\n                <Select\n                  selectLabel=\"Curso\"\n                  selected={{ value: \"Escolha uma opção\", label: \"Escolha uma opção\" }}\n                  items={[\n                    {value: 'Ciência da Computação', label: 'Ciência da Computação'},\n                    {value: 'Ciências e Tecnologias', label: 'Ciências e Tecnologias'},\n                    {value: 'Design', label: 'Design'},\n                    {value: 'Engenharia de Computação', label: 'Engenharia de Computação'},\n                    {value: 'Engenharia de Software', label: 'Engenharia de Software'},\n                    {value: 'Matemática', label: 'Matemática'},\n                    {value: 'Sistemas de Informação', label: 'Sistemas de Informação'},\n                  ]}\n                  onOptionSelect={selected => setCurso(selected.value)}\n                />\n\n                <Input\n                  value={fields.sugestaoDeTema.value}\n                  inputId=\"sugestaoDeTema\"\n                  inputLabel=\"Sugestão de tema\"\n                  inputType=\"input\"\n                  inputContentType=\"text\"\n                  fields={fields}\n                  setFields={setFields}\n                  formValid={formValid}\n                  setFormValid={setFormValid}\n                  hasInfo\n                />\n\n                <Input\n                  value={fields.descricao.value}\n                  inputId=\"descricao\"\n                  inputLabel=\"Descrição (max 1000 caracteres)\"\n                  inputType=\"textarea\"\n                  inputContentType=\"text\"\n                  fields={fields}\n                  setFields={setFields}\n                  formValid={formValid}\n                  setFormValid={setFormValid}\n                  hasInfo\n                />\n\n                <Select\n                  selectLabel=\"Área\"\n                  selected={{ value: \"Escolha uma opção\", label: \"Escolha uma opção\" }}\n                  items={[\n                    {value: 'IoT', label: 'IoT'},\n                    {value: 'Segurança', label: 'Segurança'},\n                    {value: 'Banco de Dados', label: 'Banco de Dados'},\n                    {value: 'Desenvolvimento', label: 'Desenvolvimento'},\n                    {value: 'Engenharia de Software', label: 'Engenharia de Software'},\n                    {value: 'Inteligencia Artificial', label: 'Inteligencia Artificial'},\n                    {value: 'Ciencia de Dados', label: 'Ciencia de Dados'},\n                  ]}\n                  onOptionSelect={selected => setArea(selected.value)}\n                />\n\n                <Input\n                  value={fields.linksArtigos.value}\n                  inputId=\"linksArtigos\"\n                  inputLabel=\"Links de Artigos\"\n                  inputType=\"textarea\"\n                  inputContentType=\"text\"\n                  fields={fields}\n                  setFields={setFields}\n                  formValid={formValid}\n                  setFormValid={setFormValid}\n                  hasInfo\n                />\n              </div>\n          </fieldset>\n          <footer>\n            <p>\n              <img src={warningIcon} alt=\"Aviso importante\" />\n              <span>\n                Importante! <br />\n                Preencha todos os dados\n              </span>\n            </p>\n\n            <button type=\"submit\" disabled={!formValid || loading}>\n              {loading ? <div className=\"spinner-resizer\"><Spinner /><Redirect to=\"/menu\"/></div> : \"Salvar sugestão\" }\n\n            </button>\n          </footer>\n        </form>\n      </main>\n    </div>\n  )\n\n  return (\n    <>\n      {\n        hasClass ? successModal :\n        mainContent\n      }\n    </>\n  )\n}\n\nexport default SuggestTheme\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useCallback, useState} from 'react'\nimport axios from '../../axios-config'\nimport { useHistory } from 'react-router-dom'\n\n// hooks\nimport { useAuth } from '../../hooks/auth'\n\n// components\nimport FeedbackModal from '../../components/FeedbackModal'\n\n// Images\nimport LixeiraIcon from '../../assets/images/icons/lixeira.png'\nimport EditarIcon from '../../assets/images/icons/editar.svg'\n\n// CSS styles\nimport './styles.css'\n\ninterface ThemeItemProps {\n  themeId: number,\n  userId:number,\n  themeCurso: string,\n  themeArea: string,\n  themeEmailContato: string,\n  themeSugestaoDeTema: string,\n  themeDescricao: string,\n  themeLinksArtigos: string,\n  themeRef?: any\n\n}\n\nconst CadastradosItem: React.FC<ThemeItemProps> = React.memo(props => {\n  const history = useHistory()\n  const authContext = useAuth()\n  const [modalType, setModalType] = useState(\"remove-theme\")\n  const [loading, setLoading] = useState(false)\n  const [showModal, setShowModal] = useState(true)\n  const [status, setStatus] = useState(\"none\")\n\n  function removeTheme() {\n    setLoading(true)\n    setModalType(\"remove-theme\")\n    axios.delete(\"/remove-themesCadastrados\", {\n      headers: {\n        authorization: \"Bearer \" + authContext.token,\n        userid: authContext.user?.__id,\n        courseTheme: props.themeSugestaoDeTema,\n        loading\n      }\n    })\n    .then(() => {\n      setLoading(false)\n      setStatus(\"success\")\n      setShowModal(true)\n    })\n    .catch(() => {\n        setLoading(false)\n        setStatus(\"error\")\n        setShowModal(true)\n    })\n\n  }\n\n  const removedThemeModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"Tema removido com sucesso!\"\n      onCloseModal={() => {\n        setShowModal(false)\n        history.replace('/')\n      }}\n    />\n  )\n\n  const removeThemeFailureModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"Ocorreu um erro ao remover o tema. Tente novamente mais tarde.\"\n      onCloseModal={() => setShowModal(false)}\n    />\n  )\n\n  const navigateToThemeUpdate = useCallback(()=>{\n    history.push('update',{\n      id: props.themeId,\n    })\n  },[history, props]) //add o props\n\n  return (\n    <article className=\"theme-item\" ref={props.themeRef}>\n      <header>\n        <span>\n          <p><strong>Curso: </strong>{props.themeCurso}</p>\n          <p><strong>Sugestão de Tema: </strong>{props.themeSugestaoDeTema}</p>\n          <p><strong>Descrição: </strong>{props.themeDescricao}</p>\n          <p><strong>Área: </strong>{props.themeArea}</p>\n          <p><strong>Links de Artigos: </strong>{props.themeLinksArtigos}</p>\n        </span>\n      </header>\n      <footer>\n        <div id=\"buttons\">\n          <a className=\"editar\"  onClick={navigateToThemeUpdate}>\n            {/* <Link to=\"/update\" className=\"editar\">\n              <img src={EditarIcon} alt=\"Ícone da lixeira\" />\n              Editar tema\n            </Link> */}\n            <img src={EditarIcon} alt=\"Ícone da lixeira\" />\n              Editar tema\n          </a>\n\n          <a className=\"lixeira\"\n            onClick={removeTheme}\n          >\n            <img src={LixeiraIcon} alt=\"Ícone da lixeira\" />\n            Remover tema\n          </a>\n          <>\n            {\n              modalType === \"remove-theme\"\n              && (\n                  showModal && (\n                    status === \"success\"\n                      ? removedThemeModal :\n                      status === \"error\"\n                      && removeThemeFailureModal\n                  )\n              )\n            }\n          </>\n        </div>\n      </footer>\n    </article>\n  )\n\n})\n\nexport default CadastradosItem\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport axios from '../../axios-config'\nimport { useHistory } from 'react-router-dom'\n\n// Components\nimport PageHeader from '../../components/PageHeader'\nimport CadastradosItem from '../../components/CadastradosItem'\nimport Spinner from '../../components/UI/Spinner'\n\n// hooks\nimport { useAuth } from '../../hooks/auth'\n\n// Images\nimport notFoundIcon from '../../assets/images/icons/not-found.svg'\n\n// CSS styles\nimport './styles.css'\n\ninterface ClassItem {\n  id: number,\n  name: 'string',\n  avatar: string,\n  emailContato: string,\n  sugestaoDeTema: string,\n  tipoDeUsuario: string,\n  curso: string,\n  descricao: string,\n  area: string,\n  linksArtigos: string\n}\n\nfunction ThemesCadastrados() {\n\n  const [classList, setClassList] = useState<ClassItem[]>([])\n  const [loading, setLoading] = useState(false)\n  const [loadingMore, setLoadingMore] = useState(false)\n  const [loadingFeedback, setLoadingFeedback] = useState('')\n  const [reFetch, setReFetch] = useState(true)\n\n\n  const [pageNumber, setPageNumber] = useState(1)\n  const [hasMore, setHasMore] = useState(true)\n  const observer: any = useRef()\n  const searchMoreNodeRef = useCallback(node => {\n    if (loadingMore) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(pageNumber + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loadingMore, hasMore, classList.length]) //eslint-disable-line\n\n  const history = useHistory()\n  const authContext = useAuth()\n\n  useEffect(() => {\n      (function fetchThemes() {\n        if (reFetch && hasMore) {\n          setReFetch(false)\n          setLoading(true)\n          axios.get('/get-themesCadastrados', {\n            headers: {\n              authorization: 'Bearer ' + authContext.token\n            }\n          })\n          .then(response => {\n            setLoading(false)\n            setClassList(response.data.resultsInfo.results)\n            setHasMore(!!response.data.resultsInfo.next)\n\n          })\n          .catch(() => {\n            setLoading(false)\n            alert('Ocorreu um erro desconhecido ao carregar os temas.')\n            history.replace('/')\n          })\n        }\n    })()\n  }, [reFetch]) // eslint-disable-line\n\n  useEffect(() => {\n    setLoadingMore(true)\n    axios.get('/get-themesCadastrados', {\n      params: {\n        page: pageNumber\n      },\n      headers: {\n        authorization: 'Bearer ' + authContext.token,\n        userid: authContext.user?.__id\n      }\n    })\n      .then(response => {\n        setLoadingMore(false)\n        setClassList([...classList, ...response.data.resultsInfo.results])\n        setHasMore(!!response.data.resultsInfo.next)\n        if(!!!response.data.resultsInfo.next)\n          setLoadingFeedback('Estes são todos os resultados')\n      })\n      .catch(() => {\n        setLoadingMore(false)\n        setLoadingFeedback('Erro ao buscar mais temas. Tente novamente mais tarde.')\n      })\n  }, [pageNumber]) // eslint-disable-line\n\n\n\n  return (\n    <div id=\"page-theme-list\" className=\"container\">\n      <PageHeader\n        title=\"Estes são os seus temas cadastrados.\"\n      >\n      </PageHeader>\n\n    <main>\n      {\n        loading\n          ? <div className=\"spinner-resizer\"><Spinner /></div>\n          : classList.length > 0\n            ? (\n              <>\n                {classList.map((currentClass, index) => {\n                  if (index === classList.length - 4)\n                    return (\n                      <CadastradosItem\n                        key={index}\n                        themeRef={searchMoreNodeRef}\n                        userId={currentClass.id}\n                        themeId={currentClass.id}\n                        themeCurso={currentClass.curso}\n                        themeDescricao={currentClass.descricao}\n                        themeArea={currentClass.area}\n                        themeSugestaoDeTema={currentClass.sugestaoDeTema}\n                        themeLinksArtigos={currentClass.linksArtigos}\n                        themeEmailContato={currentClass.emailContato}\n                      />\n                    )\n                  return (\n                    <CadastradosItem\n                      key={index}\n                      userId={currentClass.id}\n                      themeId={currentClass.id}\n                      themeCurso={currentClass.curso}\n                      themeDescricao={currentClass.descricao}\n                      themeArea={currentClass.area}\n                      themeSugestaoDeTema={currentClass.sugestaoDeTema}\n                      themeLinksArtigos={currentClass.linksArtigos}\n                      themeEmailContato={currentClass.emailContato}\n                    />\n                  )\n                })}\n                {\n                  hasMore\n                    ? loadingMore && <div className=\"spinner-resizer\"><Spinner /></div>\n                    : <p id=\"all-results\">{loadingFeedback}</p>\n                }\n              </>\n            )\n            : (\n                <section className=\"no-themes-found\">\n                  <header>\n                    Oops! Parece que não foi encontrado nenhum tema <br />\n                    disponível.\n                  </header>\n\n                  <img src={notFoundIcon} alt=\"Nenhum tema foi encontrado\" />\n                </section>\n            )\n      }\n      </main>\n    </div>\n  )\n}\n\nexport default ThemesCadastrados\n","import React, { useState, useEffect } from 'react'\nimport axios from '../../axios-config'\n\n\n// Images\nimport noAvatarImg from '../../assets/images/sem-avatar.svg'\n\n// Components\nimport PageHeader from '../../components/PageHeader'\nimport Input from '../../components/UI/Input'\nimport Select from '../../components/UI/Select'\nimport Spinner from '../../components/UI/Spinner'\nimport FeedbackModal from '../../components/FeedbackModal'\n\n// hooks\nimport { useAuth } from '../../hooks/auth'\n\n// Interfaces\nimport { FormFields } from '../../interfaces/forms'\n\n// CSS styles\nimport './styles.css'\nimport { useHistory } from 'react-router-dom'\n\n\nconst initialFields: FormFields = {\n\n  emailContato: {\n    value: '',\n    validation: /^[a-z-_\\d.]{3,}@[a-z]{3,}(\\.com|\\.br|\\.com\\.br)$/i,\n    valid: false,\n    info: 'O email precisa estar no formato adequado: exemplo@dominio.com',\n    showInfo: \"initial\",\n    touched: false\n  },\n  descricao: {\n    value: '',\n    validation: /^[\\d\\w\\sà-ú,.!-]{30,1000}$/,\n    valid: false,\n    info: 'A descricao precisa conter de 30 a 1000 caracteres.',\n    showInfo: \"initial\",\n    touched: false\n},\n  sugestaoDeTema: {\n    value: '',\n    validation:  /^[\\d\\w\\sà-ú,.!-]{10,300}$/,\n    valid: false,\n    info: 'O tema tem quer ter mais de 10 caracteres',\n    showInfo: \"initial\",\n    touched: false\n  },\n  linksArtigos: {\n    value: '',\n    validation:  /^[\\d\\w\\sà-ú0-9,/:.!-]{10,1000}$/,\n    valid: false,\n    info: 'O link tem que ser válido',\n    showInfo: \"initial\",\n    touched: false\n  }\n}\ninterface HistoryStateProps{\n  id: string\n}\n\nfunction EditarThemes() {\n\n  const history = useHistory()\n  const { state } = history.location\n  const historyState = state as HistoryStateProps\n\n  const authContext = useAuth()\n  const [modalType, setModalType] = useState(\"update-profile\")\n  const [fields, setFields] = useState(initialFields)\n  const [formValid, setFormValid] = useState(false)\n  const [avatar, setAvatar] = useState<string>('')\n  // const [name, setName] = useState(\"\")\n  // const [email, setEmail] = useState(\"\")\n\n  const [tipoDeUsuario] = useState('')\n  const [curso, setCurso]= useState('');\n  const [area, setArea]= useState('');\n\n  const [loading, setLoading] = useState(false)\n  const [pageReady, setPageReady] = useState(false)\n  const [showModal, setShowModal] = useState(true)\n  const [status, setStatus] = useState(\"none\")\n\n  useEffect(() => {\n    (function fetchProfileData() {\n      setLoading(true)\n      axios.get(\"/get-profile\", {\n        headers: {\n          authorization: \"Bearer \" + authContext.token,\n          userid: authContext.user?.__id\n        }\n      })\n\n          .then(response => {\n            setLoading(false)\n            const profileData = response.data\n            // let emailContato = ''\n\n            // if (profileData.emailContato)\n            //   emailContato = (profileData.emailContato)\n\n            setFields({\n\n              ...fields,\n              emailContato: {\n                ...fields.emailContato,\n                value: profileData.emailContato ? String(profileData.emailContato) : '',\n                validation: !profileData.emailContato\n                  ? /^[a-z-_\\d.]{3,}@[a-z]{3,}(\\.com|\\.br|\\.com\\.br)$/i\n                  : fields.emailContato.validation\n              },\n\n              descricao: {\n                ...fields.descricao,\n                value: profileData.descricao ? String(profileData.descricao) : '',\n                validation: !profileData.curso\n                  ? /^[\\d\\w\\sà-ú,.!-]{30,1000}$/\n                  : fields.descricao.validation\n\n              },\n              sugestaoDeTema: {\n                ...fields.sugestaoDeTema,\n                value: profileData.sugestaoDeTema ? String(profileData.sugestaoDeTema) : '',\n                validation: !profileData.curso\n                  ? /^[\\d\\w\\sà-ú,.!-]{10,300}$/\n                  : fields.sugestaoDeTema.validation\n              },\n              linksArtigos: {\n                ...fields.linksArtigos,\n                value: profileData.linksArtigos ? String(profileData.linksArtigos) : '',\n                validation: !profileData.curso\n                  ? /^[\\d\\w\\sà-ú0-9,/:.!-]{10,1000}$/\n                  : fields.linksArtigos.validation\n\n              }\n            })\n\n            if (profileData.avatar) setAvatar(profileData.avatar)\n            else setAvatar(noAvatarImg)\n\n            // setName(profileData.name)\n            // setEmail(profileData.email)\n\n\n\n            if (profileData.curso)\n              setCurso(profileData.curso)\n\n            if (profileData.area)\n              setArea(profileData.area)\n\n            setPageReady(true)\n\n        })\n        .catch(err => {\n          setLoading(false)\n          console.log(err)\n        })\n    })()\n  }, []) // eslint-disable-line\n\n\n  function updateFormStatus() {\n    if (pageReady) {\n      const fieldsNames = Object.keys(fields)\n      let isFormValid = true\n      fieldsNames.forEach(fieldName => {\n        if (isFormValid)\n          isFormValid = fields[fieldName].validation.test(fields[fieldName].value)\n      })\n      setFormValid(isFormValid)\n    }\n  }\n\n  function updateProfile(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    setModalType(\"update-profile\")\n\n    const parsedDescricao = fields.descricao.value\n    const parsedSugestaoDeTema = fields.sugestaoDeTema.value\n    const parsedLinksArtigos = fields.linksArtigos.value\n    const parsedEmailContato = fields.emailContato.value\n\n    const userData = {\n      avatar,\n      emailContato: parsedEmailContato,\n      descricao: parsedDescricao,\n      sugestaoDeTema: parsedSugestaoDeTema,\n      linksArtigos: parsedLinksArtigos,\n      curso,\n      area,\n      tipoDeUsuario,\n    }\n\n    axios.put(\"/update-themeCadastrados\", userData, {\n      headers: {\n        authorization: \"Bearer \" + authContext.token,\n        userid: authContext.user?.__id,\n        courseTheme: parsedSugestaoDeTema,\n        themeId: historyState.id\n      }\n    })\n      .then(() => {\n        setStatus(\"success\")\n        setShowModal(true)\n        authContext.user = {\n          ...authContext.user!,\n          avatar,\n          emailContato: fields.emailContato.value,\n\n        }\n      })\n      .catch(() => {\n        setStatus(\"error\")\n        setShowModal(true)\n      })\n  }\n\n  const updatedModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"O tema foi atualizado com sucesso!\"\n      onCloseModal={() => setShowModal(false)}\n    />\n)\n\n  const updateFailureModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"Ocorreu um erro ao atualizar o tema.\n      Tente novamente mais tarde.\"\n      onCloseModal={() => setShowModal(false)}\n    />\n  )\n\n  const removedClassModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"Tema removido com sucesso!\"\n      onCloseModal={() => {\n        setShowModal(false)\n        setCurso(\"\")\n      }}\n    />\n  )\n\n  const removeThemeFailureModal = (\n    <FeedbackModal\n      status={status as \"success\" | \"error\"}\n      message=\"Ocorreu um erro ao remover o tema. Tente novamente mais tarde.\"\n      onCloseModal={() => setShowModal(false)}\n    />\n  )\n\n  const mainContent = (\n    <div id=\"theme-profile\">\n      <PageHeader title=\"Meu perfil\" />\n\n      <main>\n        <form onSubmit={updateProfile}>\n          {\n            curso && (\n              <>\n                <fieldset>\n                  <legend>\n                    Sobre sugestão de tema\n                      {/* <button\n                        type=\"button\"\n                        onClick={removeTheme}\n                      >Remover tema</button> */}\n                  </legend>\n                  <div id=\"suggest-theme\">\n                    <Select\n                        selectLabel=\"Curso\"\n                        selected={{ value: curso, label: curso }}\n                        items={[\n                          {value: 'Ciência da Computação', label: 'Ciência da Computação'},\n                          {value: 'Ciências e Tecnologias', label: 'Ciências e Tecnologias'},\n                          {value: 'Design', label: 'Design'},\n                          {value: 'Engenharia de Computação', label: 'Engenharia de Computação'},\n                          {value: 'Engenharia de Software', label: 'Engenharia de Software'},\n                          {value: 'Matemática', label: 'Matemática'},\n                          {value: 'Sistemas de Informação', label: 'Sistemas de Informação'},\n                        ]}\n                        onOptionSelect={selected => {\n                          setCurso(selected.value)\n                          updateFormStatus()\n                        }}\n                    />\n                    <Input\n                      value={fields.sugestaoDeTema.value}\n                      inputId=\"sugestaoDeTema\"\n                      inputLabel=\"Sugestão de tema\"\n                      inputType=\"textarea\"\n                      inputContentType=\"text\"\n                      fields={fields}\n                      setFields={setFields}\n                      formValid={formValid}\n                      setFormValid={setFormValid}\n                      hasInfo\n                    />\n\n                    <Input\n                      value={fields.descricao.value}\n                      inputId=\"descricao\"\n                      inputLabel=\"Descrição (max 300 caracteres)\"\n                      inputType=\"textarea\"\n                      inputContentType=\"text\"\n                      fields={fields}\n                      setFields={setFields}\n                      formValid={formValid}\n                      setFormValid={setFormValid}\n                      hasInfo\n                    />\n                    <Select\n                        selectLabel=\"Área\"\n                        selected={{ value: area, label: area }}\n                        items={[\n                          {value: 'IoT', label: 'IoT'},\n                          {value: 'Segurança', label: 'Segurança'},\n                          {value: 'Banco de Dados', label: 'Banco de Dados'},\n                          {value: 'Desenvolvimento', label: 'Desenvolvimento'},\n                          {value: 'Engenharia de Software', label: 'Engenharia de Software'},\n                          {value: 'Inteligencia Artificial', label: 'Inteligencia Artificial'},\n                          {value: 'Ciencia de Dados', label: 'Ciencia de Dados'},\n                        ]}\n                        onOptionSelect={selected => {\n                          setArea(selected.value)\n                          updateFormStatus()\n                        }}\n                    />\n                    <Input\n                      value={fields.linksArtigos.value}\n                      inputId=\"linksArtigos\"\n                      inputLabel=\"Links de Artigos\"\n                      inputType=\"textarea\"\n                      inputContentType=\"text\"\n                      fields={fields}\n                      setFields={setFields}\n                      formValid={formValid}\n                      setFormValid={setFormValid}\n                      hasInfo\n                    />\n                  </div>\n                </fieldset>\n              </>\n            )\n          }\n\n          <footer>\n            <button type=\"submit\" disabled={!formValid || loading}>\n              {\n                loading\n                  ? <div className=\"spinner-resizer\"><Spinner /></div>\n                  : \"Salvar modificações\"\n              }\n            </button>\n          </footer>\n        </form>\n      </main>\n    </div>\n  )\n\n  return (\n    <>\n      {\n        modalType === \"update-profile\"\n        ? (\n          showModal && (\n            status === \"success\"\n              ? updatedModal :\n              status === \"error\"\n              && updateFailureModal\n          )\n        )\n        : (\n          modalType === \"remove-theme\"\n          && (\n              showModal && (\n                status === \"success\"\n                  ? removedClassModal :\n                  status === \"error\"\n                  && removeThemeFailureModal\n            )\n          )\n        )\n      }\n      { mainContent }\n    </>\n  )\n}\n\nexport default EditarThemes\n","import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\n\n// Pages\nimport Menu from '../pages/Menu'\nimport Profile from '../pages/Profile'\nimport SearchTheme from '../pages/SearchTheme'\nimport SuggestTheme from '../pages/SuggestTheme'\nimport ThemesCadastrado from '../pages/ThemesCadastrado'\nimport EditarThemes from '../pages/EditarThemes'\n\nfunction AppRoutes() {\n    return (\n      <Switch>\n        <Route path=\"/menu\" component={Menu} />\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/search\" component={SearchTheme} />\n        <Route path=\"/suggest\" component={SuggestTheme} />\n        <Route path=\"/cadastrado\" component={ThemesCadastrado} />\n        <Route path=\"/update\" component={EditarThemes}/>\n        <Redirect to=\"/menu\"/>\n      </Switch>\n    )\n}\n\nexport default AppRoutes\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\n// hooks\nimport { useAuth } from '../../../hooks/auth'\n\n// Components\nimport InputInfo from '../../../components/InputInfo'\n\n// Images\nimport blueHeartImg from '../../../assets/images/icons/blue-heart.svg'\n\n// Icons\nimport { Icon } from '@iconify/react'\nimport showPasswordIcon from '@iconify/icons-mdi/eye'\nimport hidePasswordIcon from '@iconify/icons-mdi/eye-off'\nimport infoIcon from '@iconify/icons-mdi/information-outline'\n\n// CSS styles\nimport './styles.css'\n\n// Interfaces\nimport { FormFields } from '../../../interfaces/forms'\n\nconst initialFields = {\n  email: {\n    value: '',\n    validation: /^[a-z-_\\d.]{3,}@[a-z]{3,}(\\.com|\\.br|\\.com\\.br)$/i,\n    valid: false,\n    info: 'O email precisa estar no formato adequado: exemplo@dominio.com',\n    showInfo: \"initial\",\n    touched: false\n  },\n  password: {\n    value: '',\n    validation: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,30}$/,\n    valid: false,\n    info: 'A senha precisa conter entre 8 a 30 caracteres',\n    showInfo: \"initial\",\n    touched: false\n  }\n}\n\nfunction Login() {\n\n  const [showPassword, setShowPassword] = useState(false)\n  const [fields, setFields] = useState<FormFields>(initialFields as FormFields)\n  const [formValid, setFormValid] = useState(false)\n  const [rememberUser, setRememberUser] = useState(false)\n  const [feedback, setFeedback] = useState('')\n  const authContext = useAuth()\n\n  const history = useHistory()\n\n  function onInputValueChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const inputIdentifier = e.target.id\n    const newInputValue = e.target.value\n\n    const allFields = Object.keys(fields)\n\n    let isFormValid = true\n    const isInputValid = fields[inputIdentifier].validation.test(newInputValue)\n\n    if (isInputValid) {\n      allFields.forEach(field => {\n        if (isFormValid)\n          if (field !== inputIdentifier)\n            isFormValid = fields[field].validation.test(fields[field].value)\n    })\n    } else isFormValid = false\n\n    if (isFormValid !== formValid)\n      setFormValid(isFormValid)\n\n    if (feedback) setFeedback('')\n\n    setFields({\n      ...fields,\n      [inputIdentifier]: {\n        ...fields[inputIdentifier],\n        value: newInputValue,\n        touched: true,\n        valid: isInputValid\n      }\n    })\n  }\n\n  async function signIn() {\n    if (feedback) setFeedback('')\n    const userAccount = {\n      email: fields.email.value,\n      password: fields.password.value,\n      rememberUser\n    }\n    const response = await authContext.signIn(userAccount)\n    history.push('/menu')\n\n    if (typeof response === 'string')setFeedback(response)\n\n  }\n\n  function onInfoHover(inputIdentifier: string) {\n    setFields({\n      ...fields,\n      [inputIdentifier]: {\n        ...fields[inputIdentifier],\n        showInfo: \"show\"\n      }\n    })\n  }\n\n  function onInfoLeave(inputIdentifier: string) {\n    setFields({\n      ...fields,\n      [inputIdentifier]: {\n        ...fields[inputIdentifier],\n        showInfo: \"hide\"\n      }\n    })\n  }\n\n  function setInputThemes(inputIdentifier: string) {\n    return [\"input-group\", !fields[inputIdentifier].valid && fields[inputIdentifier].touched ? 'invalid' : ''].join(' ')\n  }\n\n  return (\n    <div id=\"page-register-login\">\n      <h2>Fazer login</h2>\n      <form>\n        <div className={setInputThemes('email')}>\n          <input\n            value={fields.email.value}\n            onChange={onInputValueChange}\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"E-mail\"\n          />\n          <div\n            onMouseEnter={() => onInfoHover('email')}\n            onMouseLeave={() => onInfoLeave('email')}\n          ><Icon icon={infoIcon} /></div>\n          <InputInfo show={fields.email.showInfo} info={fields.email.info} />\n        </div>\n\n        <div className={setInputThemes('password')}>\n          <input\n            value={fields.password.value}\n            onChange={onInputValueChange}\n            maxLength={30}\n            type={showPassword ? \"text\" : \"password\"}\n            id=\"password\"\n            placeholder=\"Senha\"\n          />\n          <div className=\"icon-group\">\n              <div\n                style={{ cursor: 'pointer' }}\n                onClick={() => setShowPassword(!showPassword)}\n              >\n                <Icon\n                  color={showPassword ? '#33AAC2' : '#8ad2e0'}\n                  icon={showPassword ? hidePasswordIcon : showPasswordIcon}\n                />\n              </div>\n              <div\n                onMouseEnter={() => onInfoHover('password')}\n                onMouseLeave={() => onInfoLeave('password')}\n              ><Icon icon={infoIcon} /></div>\n          </div>\n          <InputInfo show={fields.password.showInfo} info={fields.password.info} />\n        </div>\n      </form>\n\n      <div id=\"user-actions\">\n\n        <label htmlFor=\"rememberMe\">\n          <input type=\"checkbox\" id=\"rememberMe\" onClick={() => setRememberUser(!rememberUser)} />\n          <span id=\"checkmark\"></span>\n          Lembrar-me\n        </label>\n\n        <Link id=\"forgot-password\" to=\"/auth/recuperar-senha\">Esqueci minha senha</Link>\n\n        {feedback && <p id=\"signin-feedback\">{feedback}</p>}\n\n        <button\n          disabled={!formValid || authContext.loading}\n          onClick={signIn}\n        >Entrar</button>\n      </div>\n\n      <footer>\n        <div id=\"no-account\">\n          Não tem conta? <br />\n          <Link to=\"/auth/cadastro\">Cadastre-se</Link>\n        </div>\n\n        <p>É de graça <img src={blueHeartImg} alt=\"Coração azul\" /></p>\n      </footer>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useContext, createContext, useState } from 'react'\n\ninterface ProcessFinishedContext {\n  title: string,\n  description: string,\n  defineTitle(newTitle: string): void,\n  defineDescription(newDescription: string): void\n}\n\nconst ProcessFinishedContext = createContext({} as ProcessFinishedContext)\n\nexport const ProcessFinishedContextProvider: React.FC = ({ children }) => {\n\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n\n  function defineTitle(newTitle: string) {\n    setTitle(newTitle)\n  }\n\n  function defineDescription(newDescription: string) {\n    setDescription(newDescription)\n  }\n\n  return (\n    <ProcessFinishedContext.Provider\n      value={{\n        title,\n        description,\n        defineTitle,\n        defineDescription\n      }}\n    >{ children }</ProcessFinishedContext.Provider>\n  )\n}\n\nexport function useProcessFinished() {\n  return useContext(ProcessFinishedContext)\n}\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\n// Icons\nimport { Icon } from '@iconify/react'\nimport showPasswordIcon from '@iconify/icons-mdi/eye'\nimport hidePasswordIcon from '@iconify/icons-mdi/eye-off'\nimport infoIcon from '@iconify/icons-mdi/information-outline'\n\n// Components\nimport InputInfo from '../../../components/InputInfo'\n\n// Images\nimport goBackImg from '../../../assets/images/icons/back.svg'\n\n// hooks\nimport { useAuth } from '../../../hooks/auth'\nimport { useProcessFinished } from '../../../hooks/process-finished'\n\n// CSS styles\nimport './styles.css'\n\n// Interfaces\nimport { FormFields } from '../../../interfaces/forms'\n\nconst initialFields = {\n  name: {\n    value: '',\n    validation: /^[a-zà-ú]{3,20}$/i,\n    valid: false,\n    info: 'O nome precisa ter entre 3 a 20 caracteres.',\n    showInfo: \"initial\",\n    touched: false\n  },\n  surname: {\n    value: '',\n    validation: /^[a-zà-ú]{5,30}$/i,\n    valid: false,\n    info: 'O sobrenome precisa ter entre 5 a 30 caracteres',\n    showInfo: \"initial\",\n    touched: false\n  },\n  email: {\n    value: '',\n    validation: /^[a-z-_\\d.]{3,}@[a-z]{3,}(\\.com|\\.br|\\.com\\.br)$/i,\n    valid: false,\n    info: 'O email precisa estar no formato adequado: exemplo@dominio.com',\n    showInfo: \"initial\",\n    touched: false\n  },\n  password: {\n    value: '',\n    validation: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,30}$/,\n    valid: false,\n    info: 'A senha precisa conter entre 8 a 30 caracteres e conter 1 ou mais letras maiúsculas e números.',\n    showInfo: \"initial\",\n    touched: false\n  }\n}\n\nfunction Signup() {\n\n  const history = useHistory()\n  const [showPassword, setShowPassword] = useState(false)\n  const [fields, setFields] = useState<FormFields>(initialFields as FormFields)\n  const [formValid, setFormValid] = useState(false)\n  const [feedback, setFeedback] = useState('')\n  const authContext = useAuth()\n  const processFinishedContext = useProcessFinished()\n\n  async function signupUser(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    if(feedback) setFeedback('')\n\n    const userData = {\n      name: fields.name.value,\n      surname: fields.surname.value,\n      email: fields.email.value,\n      password: fields.password.value\n    }\n\n    const response = await authContext.signUp(userData)\n    if (typeof response === 'string') setFeedback(response)\n    else {\n      processFinishedContext.defineTitle('Cadastro concluído')\n      processFinishedContext.defineDescription('Agora você faz parte da plataforma da TCC Theme Ideas. Tenha uma ótima experiência.')\n      history.replace('/auth/cadastro/sucesso')\n    }\n  }\n\n  function onInputValueChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const inputIdentifier = e.target.id\n    const newInputValue = e.target.value\n\n    const allFields = Object.keys(fields)\n\n    let isFormValid = true\n    const isInputValid = fields[inputIdentifier].validation.test(newInputValue)\n\n    if (isInputValid) {\n      allFields.forEach(field => {\n        if (isFormValid)\n          if (field !== inputIdentifier)\n            isFormValid = fields[field].validation.test(fields[field].value)\n      })\n    } else isFormValid = false\n\n    if (isFormValid !== formValid)\n      setFormValid(isFormValid)\n\n    if(feedback) setFeedback('')\n\n    setFields({\n      ...fields,\n      [inputIdentifier]: {\n        ...fields[inputIdentifier],\n        value: newInputValue,\n        touched: true,\n        valid: isInputValid\n      }\n    })\n  }\n\n  function onInfoHover(inputIdentifier: string) {\n    setFields({\n      ...fields,\n      [inputIdentifier]: {\n        ...fields[inputIdentifier],\n        showInfo: \"show\"\n      }\n    })\n  }\n\n  function onInfoLeave(inputIdentifier: string) {\n    setFields({\n      ...fields,\n      [inputIdentifier]: {\n        ...fields[inputIdentifier],\n        showInfo: \"hide\"\n      }\n    })\n  }\n\n  function setInputThemes(inputIdentifier: string) {\n    return [\"input-group\", !fields[inputIdentifier].valid && fields[inputIdentifier].touched ? 'invalid' : ''].join(' ')\n  }\n\n  return (\n    <div id=\"page-register-signup\">\n      <img\n        onClick={() => history.replace('/auth/login')}\n        src={goBackImg}\n        alt=\"Go back arrow-left\"\n      />\n      <h2>Cadastro</h2>\n      <p>Preencha os dados abaixo para começar.</p>\n      <form onSubmit={signupUser}>\n        <div className={setInputThemes('name')}>\n          <input\n            value={fields.name.value}\n            onChange={onInputValueChange}\n            type=\"text\"\n            id=\"name\"\n            placeholder=\"Nome\"\n          />\n          <div\n            onMouseEnter={() => onInfoHover('name')}\n            onMouseLeave={() => onInfoLeave('name')}\n          ><Icon icon={infoIcon} /></div>\n          <InputInfo show={fields.name.showInfo} info={fields.name.info} />\n        </div>\n        <div className={setInputThemes('surname')}>\n          <input\n            value={fields.surname.value}\n            onChange={onInputValueChange}\n            type=\"text\"\n            id=\"surname\"\n            placeholder=\"Sobrenome\"\n          />\n          <div\n            onMouseEnter={() => onInfoHover('surname')}\n            onMouseLeave={() => onInfoLeave('surname')}\n          ><Icon icon={infoIcon} /></div>\n          <InputInfo show={fields.surname.showInfo} info={fields.surname.info} />\n        </div>\n\n        <div className={setInputThemes('email')}>\n          <input\n            value={fields.email.value}\n            onChange={onInputValueChange}\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"E-mail\"\n          />\n          <div\n            onMouseEnter={() => onInfoHover('email')}\n            onMouseLeave={() => onInfoLeave('email')}\n          ><Icon icon={infoIcon} /></div>\n          <InputInfo show={fields.email.showInfo} info={fields.email.info} />\n        </div>\n\n        <div className={setInputThemes('password')}>\n          <input\n            value={fields.password.value}\n            onChange={onInputValueChange}\n            maxLength={30}\n            type={showPassword ? \"text\" : \"password\"}\n            id=\"password\"\n            placeholder=\"Senha\"\n          />\n          <div className=\"icon-group\">\n            <div\n              style={{ cursor: 'pointer' }}\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              <Icon\n                color={showPassword ? '#33AAC2' : '#8ad2e0'}\n                icon={showPassword ? hidePasswordIcon : showPasswordIcon}\n              />\n            </div>\n              <div\n                onMouseEnter={() => onInfoHover('password')}\n                onMouseLeave={() => onInfoLeave('password')}\n              ><Icon icon={infoIcon} /></div>\n          </div>\n          <InputInfo show={fields.password.showInfo} info={fields.password.info} />\n        </div>\n        {feedback && <p id=\"signup-feedback\">{feedback}</p>}\n        <button\n          type=\"submit\"\n          disabled={!formValid || authContext.loading}\n        >Concluir cadastro</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Signup\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\n// Images\nimport checkInBoxImg from '../../../assets/images/icons/success-check-icon.svg'\n\n// hooks\nimport { useProcessFinished } from '../../../hooks/process-finished'\n\n// CSS styles\nimport './styles.css'\n\nfunction ProcessFinished() {\n\n  const history = useHistory()\n  const processFinishedContext = useProcessFinished()\n\n  useEffect(() => {\n    if(!processFinishedContext.title) history.replace('/auth/login')\n  }, []) // eslint-disable-line\n\n  return (\n    <div id=\"process-finished\">\n      <img src={checkInBoxImg} alt=\"Success Icon\" />\n      <h1>{processFinishedContext.title}</h1>\n      <p>{processFinishedContext.description}</p>\n      <button onClick={() => history.replace('/auth/login')}>Voltar ao login</button>\n    </div>\n  )\n}\n\nexport default ProcessFinished\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\n// Icons\nimport { Icon } from '@iconify/react'\nimport infoIcon from '@iconify/icons-mdi/information-outline'\n\n// Components\nimport InputInfo from '../../../components/InputInfo'\n\n// Images\nimport goBackImg from '../../../assets/images/icons/back.svg'\n\n\n// hooks\nimport { useAuth } from '../../../hooks/auth'\nimport { useProcessFinished } from '../../../hooks/process-finished'\n\n// CSS styles\nimport './styles.css'\n\n// Interfaces\nimport { FormFields } from '../../../interfaces/forms'\n\nconst initialFields = {\n  email: {\n    value: '',\n    validation: /^[a-z-_\\d.]{3,}@[a-z]{3,}(\\.com|\\.br|\\.com\\.br)$/i,\n    valid: false,\n    info: 'O email precisa estar no formato adequado: exemplo@dominio.com',\n    showInfo: \"initial\",\n    touched: false\n  }\n}\n\nfunction ResetPasswordRequest() {\n\n  const history = useHistory()\n  const [fields, setFields] = useState<FormFields>(initialFields as FormFields)\n  const [formValid, setFormValid] = useState(false)\n  const [feedback, setFeedback] = useState('')\n  const authContext = useAuth()\n  const processFinishedContext = useProcessFinished()\n\n  async function sendPasswordResetEmail(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    if(feedback) setFeedback('')\n\n    const response = await authContext.requestPasswordResetEmail(fields.email.value)\n    if (typeof response === 'string') setFeedback(response)\n    else {\n      processFinishedContext.defineTitle('Redefinição enviada!')\n      processFinishedContext.defineDescription('Boa, agora é só checar o e-mail que foi enviado para você redefinir sua senha e aproveitar.')\n      history.replace('/auth/recuperar-senha/sucesso')\n    }\n  }\n\n  function onInputValueChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const inputIdentifier = e.target.id\n    const newInputValue = e.target.value\n\n    const isInputValid = fields[inputIdentifier].validation.test(newInputValue)\n\n    const isFormValid = isInputValid\n\n    if (isFormValid !== formValid)\n      setFormValid(isFormValid)\n\n    if(feedback) setFeedback('')\n\n    setFields({\n      email: {\n        ...fields.email,\n        value: newInputValue,\n        touched: true,\n        valid: isInputValid\n      }\n    })\n  }\n\n  function onInfoHover() {\n    setFields({\n      email: {\n        ...fields.email,\n        showInfo: \"show\"\n      }\n    })\n  }\n\n  function onInfoLeave() {\n    setFields({\n      email: {\n        ...fields.email,\n        showInfo: \"hide\"\n      }\n    })\n  }\n\n  function setInputThemes() {\n    return [\"input-group\", !fields.email.valid && fields.email.touched ? 'invalid' : ''].join(' ')\n  }\n\n  return (\n    <div id=\"page-register-password-reset-request\">\n      <img\n        onClick={() => history.replace('/auth/login')}\n        src={goBackImg}\n        alt=\"Go back arrow-left\"\n      />\n      <h2>Eita, esqueceu sua senha?</h2>\n      <p>Não esquenta, vamos dar um jeito nisso.</p>\n      <form onSubmit={sendPasswordResetEmail}>\n        <div className={setInputThemes()}>\n          <input\n            value={fields.email.value}\n            onChange={onInputValueChange}\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"E-mail\"\n          />\n          <div\n            onMouseEnter={() => onInfoHover()}\n            onMouseLeave={() => onInfoLeave()}\n          ><Icon icon={infoIcon} /></div>\n          <InputInfo show={fields.email.showInfo} info={fields.email.info} />\n        </div>\n        {feedback && <p id=\"password-reset-request-feedback\">{feedback}</p>}\n        <button\n          type=\"submit\"\n          disabled={!formValid || authContext.loading}\n        >Enviar</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ResetPasswordRequest\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\n// hooks\nimport { useAuth } from '../../../hooks/auth'\nimport { useProcessFinished } from '../../../hooks/process-finished'\n\n// Components\nimport InputInfo from '../../../components/InputInfo'\n\n// Icons\nimport { Icon } from '@iconify/react'\nimport showPasswordIcon from '@iconify/icons-mdi/eye'\nimport hidePasswordIcon from '@iconify/icons-mdi/eye-off'\nimport infoIcon from '@iconify/icons-mdi/information-outline'\n\n// CSS styles\nimport './styles.css'\n\n// Interfaces\nimport { FormFields } from '../../../interfaces/forms'\n\nconst initialFields = {\n  newPassword: {\n    value: '',\n    validation: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,30}$/,\n    valid: false,\n    info: 'A senha precisa conter entre 8 a 30 caracteres',\n    showInfo: \"initial\",\n    touched: false\n  },\n  repeatPassword: {\n    value: '',\n    validation: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,30}$/,\n    valid: false,\n    info: '',\n    showInfo: \"initial\",\n    touched: false\n  }\n}\n\nfunction UpdateUserPassword() {\n\n  const [showNewPassword, setShowNewPassword] = useState(false)\n  const [showRepeatPassword, setShowRepeatPassword] = useState(false)\n  const [fields, setFields] = useState<FormFields>(initialFields as FormFields)\n  const [formValid, setFormValid] = useState(false)\n  const [feedback, setFeedback] = useState('')\n  const authContext = useAuth()\n  const processFinishedContext = useProcessFinished()\n  const history = useHistory()\n\n  const recoveryToken = history.location.pathname.split('/')[4]\n\n  function onInputValueChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const inputIdentifier = e.target.id\n    const newInputValue = e.target.value\n\n    const allFields = Object.keys(fields)\n\n    let isFormValid = true\n    const isInputValid = fields[inputIdentifier].validation.test(newInputValue)\n\n    if (isInputValid) {\n      allFields.forEach(field => {\n        if (isFormValid)\n          if (field !== inputIdentifier)\n            isFormValid = fields[field].validation.test(fields[field].value)\n      })\n    } else isFormValid = false\n\n    if (isFormValid) {\n      const validation = new RegExp(`^${inputIdentifier === 'newPassword' ? newInputValue : fields.newPassword.value}$`)\n\n      isFormValid = validation.test(inputIdentifier === 'repeatPassword' ? newInputValue : fields.repeatPassword.value)\n\n      if (!isFormValid) setFeedback('As senhas são diferentes.')\n      else setFeedback('')\n    }\n\n    if (isFormValid !== formValid)\n      setFormValid(isFormValid)\n\n    setFields({\n      ...fields,\n      [inputIdentifier]: {\n        ...fields[inputIdentifier],\n        value: newInputValue,\n        touched: true,\n        valid: isInputValid\n      }\n    })\n  }\n\n  async function updateUserPassword() {\n    if (feedback) setFeedback('')\n    const updatePasswordData = {\n      token: recoveryToken,\n      new_password: fields.newPassword.value\n    }\n    const response = await authContext.updateUserPassword(updatePasswordData)\n    if (typeof response === 'string') setFeedback(response)\n    else {\n      processFinishedContext.defineTitle('Senha redefinida com sucesso!')\n      processFinishedContext.defineDescription('Agora você já pode logar no TCC Theme Ideas e aproveitar.')\n      history.replace('/auth/recuperar-senha/sucesso')\n    }\n  }\n\n  function onInfoHover() {\n    setFields({\n      ...fields,\n      newPassword: {\n        ...fields.newPassword,\n        showInfo: \"show\"\n      }\n    })\n  }\n\n  function onInfoLeave() {\n    setFields({\n      ...fields,\n      newPassword: {\n        ...fields.newPassword,\n        showInfo: \"hide\"\n      }\n    })\n  }\n\n  function setInputThemes(inputIdentifier: string) {\n    return [\"input-group\", !fields[inputIdentifier].valid && fields[inputIdentifier].touched ? 'invalid' : ''].join(' ')\n  }\n\n  return (\n    <div id=\"page-register-update-user-password\">\n      <h2>Redefinir senha</h2>\n      <p>Preencha o formulário abaixo para redefinir sua senha.</p>\n      <form>\n        <div className={setInputThemes('newPassword')}>\n          <input\n            value={fields.newPassword.value}\n            onChange={onInputValueChange}\n            maxLength={30}\n            type={showNewPassword ? \"text\" : \"password\"}\n            id=\"newPassword\"\n            placeholder=\"Nova senha\"\n          />\n          <div className=\"icon-group\">\n            <div\n              style={{ cursor: 'pointer' }}\n              onClick={() => setShowNewPassword(!showNewPassword)}\n            >\n              <Icon\n                color={showNewPassword ? '#33AAC2' : '#8ad2e0'}\n                icon={showNewPassword ? hidePasswordIcon : showPasswordIcon}\n              />\n            </div>\n            <div\n              onMouseEnter={() => onInfoHover()}\n              onMouseLeave={() => onInfoLeave()}\n            ><Icon icon={infoIcon} /></div>\n          </div>\n          <InputInfo show={fields.newPassword.showInfo} info={fields.newPassword.info} />\n        </div>\n\n        <div className={setInputThemes('repeatPassword')}>\n          <input\n            value={fields.repeatPassword.value}\n            onChange={onInputValueChange}\n            maxLength={30}\n            type={showRepeatPassword ? \"text\" : \"password\"}\n            id=\"repeatPassword\"\n            placeholder=\"Repetir nova senha\"\n          />\n          <div className=\"icon-group\">\n            <div\n              style={{ cursor: 'pointer' }}\n              onClick={() => setShowRepeatPassword(!showRepeatPassword)}\n            >\n              <Icon\n                color={showRepeatPassword ? '#33AAC2' : '#6A6180'}\n                icon={showRepeatPassword ? hidePasswordIcon : showPasswordIcon}\n              />\n            </div>\n          </div>\n        </div>\n\n        {feedback && <p id=\"update-user-password-feedback\">{feedback}</p>}\n        <button\n          disabled={!formValid || authContext.loading}\n          onClick={updateUserPassword}\n        >Redefinir senha</button>\n      </form>\n    </div>\n  )\n}\n\nexport default UpdateUserPassword\n","import React, { useEffect, useState } from 'react'\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom'\n\n// Images\nimport logo from '../../assets/images/iconLogo2.svg'\n\n// Pages\nimport Login from './Login'\nimport Signup from './Signup'\nimport ProcessFinished from './ProcessFinished'\nimport ResetPasswordRequest from './ResetPasswordRequest'\nimport UpdateUserPassword from './UpdateUserPassword'\n\n// CSS styles\nimport './styles.css'\n\nfunction Register() {\n\n  const history = useHistory()\n  const [registerMethod, setRegisterMethod] = useState('login')\n\n  useEffect(() => {\n    switch(history.location.pathname) {\n      case '/auth/':\n      case '/auth/login':\n        setRegisterMethod('login')\n        break\n      case '/auth/cadastro':\n        setRegisterMethod('signup')\n        break\n      case '/auth/cadastro/sucesso':\n      case '/auth/recuperar-senha/sucesso':\n        setRegisterMethod('success')\n        break\n      case '/auth/recuperar-senha':\n        setRegisterMethod('reset-password-request')\n        break\n      default:\n        setRegisterMethod('login')\n    }\n  }, [history.location.pathname])\n\n  return (\n    <div\n      id=\"page-register\"\n      className={\n        ['signup', 'reset-password-request']\n          .includes(registerMethod) ? 'invert' : ''\n      }\n    >\n      {\n        registerMethod !== 'success' &&\n\n        <div id=\"page-register-header\">\n          <img src={logo} alt=\"TCC\" />\n          <h2>Sua plataforma de temas para TCC.</h2>\n        </div>\n      }\n      <div id=\"page-register-content\">\n        <Switch>\n          <Route path=\"/auth/login\" component={Login} />\n          <Route path=\"/auth/cadastro/sucesso\" component={ProcessFinished} />\n          <Route path=\"/auth/cadastro\" component={Signup} />\n          <Route exact path=\"/auth/recuperar-senha/usuario/:token\" component={UpdateUserPassword} />\n          <Route exact path=\"/auth/recuperar-senha/sucesso\" component={ProcessFinished} />\n          <Route exact path=\"/auth/recuperar-senha\" component={ResetPasswordRequest} />\n          <Redirect to=\"/auth/login\"/>\n        </Switch>\n      </div>\n    </div>\n  )\n}\n\nexport default Register\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\n// Pages\nimport Register from '../pages/Register'\n\nfunction AuthRoutes() {\n  return (\n    <Switch>\n      <Route path=\"/auth\" component={Register} />\n      <Redirect to=\"/auth\" />\n    </Switch>\n  )\n}\n\nexport default AuthRoutes\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport AppRoutes from './app.routes'\nimport AuthRoutes from './auth.routes'\nimport { useAuth } from '../hooks/auth'\n\nfunction Routes() {\n    const [routes, setRoutes] = useState<JSX.Element | null>(null)\n    const auth = useAuth()\n\n    useEffect(() => {\n        if(!auth.signedIn) setRoutes(AuthRoutes)\n        else setRoutes(AppRoutes)\n    }, [auth.signedIn])\n\n    return <BrowserRouter>{ routes }</BrowserRouter>\n}\n\nexport default Routes\n","import React from 'react'\n\n// Pages\nimport Routes from './routes'\n\nimport { AuthProvider } from './hooks/auth'\nimport { ProcessFinishedContextProvider } from './hooks/process-finished'\n\n// CSS styles\nimport './assets/styles/global.css'\n\nfunction App() {\n  return (\n    <ProcessFinishedContextProvider>\n      <AuthProvider>\n        <Routes />\n      </AuthProvider>\n    </ProcessFinishedContextProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst app = (\n  <App />\n)\n\nReactDOM.render(app, document.getElementById('root'))"],"sourceRoot":""}